{"version":3,"sources":["charts.css","_switch.scss","charts.scss","_sseeeedd-func.scss","_sseeeedd-vars.scss"],"names":[],"mappings":"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","file":"charts.css","sourcesContent":["button[role=switch]{background-color:rgba(0,0,205,.1);border-radius:1.375rem !important;box-sizing:content-box;box-shadow:none !important;color:#444;font-size:1rem;height:2.75rem;line-height:2.75rem;margin-left:2rem;padding:0 3rem;position:relative;transition:all .3s cubic-bezier(0, 0.5, 0.5, 1);width:4.75rem;will-change:background-color}button[role=switch]::before{background:#fff;border-radius:1.375rem;content:\"\";position:absolute;height:2.375rem;left:.25rem;top:.25rem;transform:none;transition:transform .3s cubic-bezier(0, 0.5, 0.5, 1) 0s;width:2.375rem;will-change:transform}button[role=switch]:hover,button[role=switch]:focus,button[role=switch]:active{background-color:rgba(0,0,205,.075);color:#000;outline-color:rgba(0,0,0,0);top:0}button[role=switch][aria-checked=true]{background-color:rgba(152,251,152,.3)}button[role=switch][aria-checked=true]::before{background:#01ac49;transform:translateX(7.875rem)}button[role=switch]>*:first-child,button[role=switch][aria-checked=true]>*:last-child{display:none}button[role=switch][aria-checked=true]>*:first-child{display:block}@media screen and (-ms-high-contrast: active){button[role=switch]{background-color:buttonFace;border:1px solid currentColor !important;color:buttonText}button[role=switch]>span{background-color:inherit}button[role=switch]::before{background:currentColor}@supports(--css: var(--iables)){button[role=switch] button[role=switch][aria-checked=true]{background-color:highlight;color:highlightText}}}.pl-5{padding-left:5rem}.fieldset{display:flex;align-items:center;justify-content:center}.illustration[role=group]{margin:3rem auto;max-width:min-content}.illustration[role=group] img{max-width:none}body>:not(.modeplan) .slide{overflow-x:hidden !important}body>:not(.modeplan) .slide[id=white-slide]{background:#fff}table{font-size:1rem;margin:auto}pre[class*=language-]{overflow-y:hidden}pre code[class*=language-]{font-size:.875rem}@media screen and (min-width: 48em){pre code[class*=language-]{font-size:1.25rem}}.table-ffoodd{background:#fff;border-collapse:collapse;caption-side:top;font-feature-settings:\"tnum\";width:100%;vertical-align:top}.table-ffoodd>caption:first-child{font-style:italic;margin:0;padding:2.5rem 1rem}.table-ffoodd th,.table-ffoodd td{padding:.5rem .75rem;text-align:left}thead .table-ffoodd th,tbody .table-ffoodd th,thead .table-ffoodd td,tbody .table-ffoodd td{border-bottom:1px solid #f5f5f5}.table-ffoodd th,.table-ffoodd table strong{color:#000}.table-ffoodd td{line-height:1.25;max-width:100%}.table-ffoodd tbody{border:1px solid #f5f5f5}[class*=charts] [role=presentation]{display:none}[class*=charts] abbr[title]{border-bottom:0;font-size:small;font-weight:normal;text-transform:none}.table-container .fieldset{display:none !important}.table-charts{caption-side:bottom;empty-cells:hide;margin:1.5em auto;overflow:hidden;padding:1em;--checkers: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cg fill='%23ffffff99'%3E%3Cpath fill-rule='evenodd' d='M0 0h4v4H0V0zm4 4h4v4H4V4z'/%3E%3C/g%3E%3C/svg%3E\");--hexagons: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='24' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff99' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.98-7.5V0h-2v6.35L0 12.69v2.3zm0 18.5L12.98 41v8h-2v-6.85L0 35.81v-2.3zM15 0v7.5L27.99 15H28v-2.31h-.01L17 6.35V0h-2zm0 49v-8l12.99-7.5H28v2.31h-.01L17 42.15V49h-2z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");--triangles: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='16' viewBox='0 0 36 72'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff99'%3E%3Cpath d='M2 6h12L8 18 2 6zm18 36h12l-6 12-6-12z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");--zig: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='12' viewBox='0 0 20 12'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff99'%3E%3Cpath d='M9.8 12L0 2.2V.8l10 10 10-10v1.4L10.2 12h-.4zm-4 0L0 6.2V4.8L7.2 12H5.8zm8.4 0L20 6.2V4.8L12.8 12h1.4zM9.8 0l.2.2.2-.2h-.4zm-4 0L10 4.2 14.2 0h-1.4L10 2.8 7.2 0H5.8z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");--stripes: url(\"data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ffffff99' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E\");--dots: url(\"data:image/svg+xml,%3Csvg width='10' height='10' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ffffff99' fill-rule='evenodd'%3E%3Ccircle cx='3' cy='3' r='3'/%3E%3Ccircle cx='13' cy='13' r='3'/%3E%3C/g%3E%3C/svg%3E\")}.table-charts>caption:first-child{background:inherit;font-style:normal;padding:1rem 0}table:not(.table-charts) .sr-only{clip:auto !important;clip-path:none !important;height:auto !important;overflow:visible !important;position:static !important;width:auto !important;white-space:normal !important}@media screen and (min-width: 30em){.table-charts{border-collapse:separate;border-spacing:0;contain:content}.table-charts th,.table-charts td{border:0;padding:0}.table-charts th:empty,.table-charts td:empty{display:none !important}@supports(grid-template-columns: repeat(var(--scale, 100), minmax(0, 1fr))){.table-charts.bar.step-1 caption{text-align:initial;text-indent:16em}.table-charts.bar.step-1 tbody tr{display:grid;grid-auto-rows:1fr;grid-row-gap:.5rem;grid-template-columns:minmax(min-content, 15em) repeat(var(--scale, 100), minmax(0, 1fr)) 10ch;transition:opacity .2s cubic-bezier(0.5, 0, 0.5, 1)}.table-charts.bar.step-1 tbody tr th{grid-column:1/1;margin:.5rem 0 0;padding:0 1rem 0 0;text-align:right}.table-charts.bar.step-1 tbody tr td{background:currentColor;grid-column:2/var(--value, 0);margin:.5rem 0 0;position:relative}.table-charts.bar.step-2 tbody tr td span{background:inherit;-webkit-text-fill-color:rgba(0,0,0,0);-webkit-background-clip:text;font-weight:bold;left:100%;line-height:1.5;position:absolute}.table-charts.bar.step-3 tbody tr td{--size: calc(var(--scale, 100) * 100%);--position: calc(var(--value, 0) / var(--scale, 100) * 100%);background:linear-gradient(to right, #01ac49, #444, mediumblue, rebeccapurple, crimson) var(--position) 0%/var(--size) 100%,rgba(0,0,0,0) var(--background) center/contain;background-blend-mode:hard-light}.table-charts.bar.step-3 tbody tr:nth-child(1n+1){--background: var(--checkers)}.table-charts.bar.step-3 tbody tr:nth-child(2n+2){--background: var(--hexagons)}.table-charts.bar.step-3 tbody tr:nth-child(3n+3){--background: var(--triangles)}.table-charts.bar.step-3 tbody tr:nth-child(4n+4){--background: var(--zig)}.table-charts.bar.step-3 tbody tr:nth-child(5n+5){--background: var(--stripes)}.table-charts.bar.step-3 tbody tr:nth-child(6n+6){--background: var(--dots)}.table-charts.bar.step-4:hover tr{opacity:.5}.table-charts.bar.step-4:hover tr:hover{opacity:1}@media screen and (min-width: 30em)and (-ms-high-contrast: active){.table-charts.bar.step-4 td{background-image:linear-gradient(to right, Window, ButtonFace, ButtonShadow, ButtonText, highlight),var(--background)}}.table-charts.bar.step-4.waterfall tr:nth-of-type(1) td{grid-column:var(--0, 2)/var(--value, 0)}.table-charts.bar.step-4.waterfall tr:nth-of-type(2) td{grid-column:var(--1, 2)/var(--value, 0)}.table-charts.bar.step-4.waterfall tr:nth-of-type(3) td{grid-column:var(--2, 2)/var(--value, 0)}.table-charts.bar.step-4.waterfall tr:nth-of-type(4) td{grid-column:var(--3, 2)/var(--value, 0)}.table-charts.bar.step-4.waterfall tr:nth-of-type(5) td{grid-column:var(--4, 2)/var(--value, 0)}.table-charts.bar.step-4.waterfall tr:nth-of-type(6) td{grid-column:var(--5, 2)/var(--value, 0)}.table-charts.bar.step-4.waterfall tr:nth-of-type(7) td{grid-column:var(--6, 2)/var(--value, 0)}.table-charts.bar.step-4.waterfall tr:nth-of-type(8) td{grid-column:var(--7, 2)/var(--value, 0)}.table-charts.bar.step-4.waterfall tr:nth-of-type(9) td{grid-column:var(--8, 2)/var(--value, 0)}.table-charts.bar.step-4.waterfall tr:nth-of-type(10) td{grid-column:var(--9, 2)/var(--value, 0)}.table-charts.bar.step-4.waterfall tr:nth-of-type(11) td{grid-column:var(--10, 2)/var(--value, 0)}}@supports(clip-path: polygon(0% calc(100% - var(--1) * 100% / var(--y)))){.table-charts.line{--offset: calc((100% / var(--x)) / 2);--height: calc( 32em - 2rem );--bottom: calc( 100% - var(--height) );position:relative;transition:background .3s cubic-bezier(0.5, 0, 0.5, 1),color .3s cubic-bezier(0.5, 0, 0.5, 1)}.table-charts.line::after{bottom:var(--bottom);content:\"\";position:absolute;top:0;width:100%;z-index:1}.table-charts.line tr::before{content:\"\";position:absolute}.table-charts.line [scope=row],.table-charts.line thead th:first-child{color:var(--color, currentColor);text-align:left}.table-charts.line th,.table-charts.line td{background:#fff;font-weight:bold;text-align:center;width:calc(100%/var(--x))}.table-charts.line th:hover,.table-charts.line td:hover{color:#0000cd}.table-charts.line.step-1{padding:var(--height) 0 1rem}.table-charts.line.step-1::after{--scale: calc( ( 100% - (var(--y) * 1px) ) / var(--y) );background:repeating-linear-gradient(to bottom, white, white var(--scale), rgba(0, 0, 0, 0.25) calc(var(--scale) + 1px));bottom:var(--bottom);content:\"\";position:absolute;top:0;width:100%;z-index:1}.table-charts.line.step-2 [style]::before{bottom:var(--bottom);background:linear-gradient(to top, deepskyblue, crimson 75%);clip-path:polygon(0% 100%, calc(100% / var(--x) * 1) 100%, calc(100% / var(--x) * 1) calc(100% - var(--1) / var(--y) * 100%), calc(100% / var(--x) * 1 + var(--offset)) calc(100% - var(--1) / var(--y) * 100%), calc(100% / var(--x) * 2 + var(--offset)) calc(100% - var(--2) / var(--y) * 100%), calc(100% / var(--x) * 3 + var(--offset)) calc(100% - var(--3) / var(--y) * 100%), calc(100% / var(--x) * 4 + var(--offset)) calc(100% - var(--4) / var(--y) * 100%), calc(100% / var(--x) * 5 + var(--offset)) calc(100% - var(--5) / var(--y) * 100%), calc(100% / var(--x) * 6 + var(--offset)) calc(100% - var(--6) / var(--y) * 100%), calc(100% / var(--x) * 7 + var(--offset)) calc(100% - var(--7) / var(--y) * 100%), calc(100% / var(--x) * 8 + var(--offset)) calc(100% - var(--8) / var(--y) * 100%), calc(100% / var(--x) * 9 + var(--offset)) calc(100% - var(--9) / var(--y) * 100%), calc(100% / var(--x) * 10 + var(--offset)) calc(100% - var(--10) / var(--y) * 100%), calc(100% / var(--x) * 11 + var(--offset)) calc(100% - var(--11) / var(--y) * 100%), calc(100% / var(--x) * 12 + var(--offset)) calc(100% - var(--12) / var(--y) * 100%), 100% calc(100% - var(--12) / var(--y) * 100%), 100% 100%, 0% 100%);content:\"\";position:absolute;top:0;width:100%;z-index:2}.table-charts.line.step-2 [scope=col]:not(:first-child)::after{background-color:#fff;background-image:var(--stripes);background-blend-mode:exclusion;bottom:4rem;content:\"\";height:calc(100% - 4rem);mix-blend-mode:soft-light;opacity:0;position:absolute;transition:opacity .3s cubic-bezier(0.5, 0, 0.5, 1);width:inherit;z-index:3}.table-charts.line.step-2 [scope=col]:nth-child(2)::after{left:calc(100% / var(--x) * 1)}.table-charts.line.step-2 [scope=col]:nth-child(3)::after{left:calc(100% / var(--x) * 2)}.table-charts.line.step-2 [scope=col]:nth-child(4)::after{left:calc(100% / var(--x) * 3)}.table-charts.line.step-2 [scope=col]:nth-child(5)::after{left:calc(100% / var(--x) * 4)}.table-charts.line.step-2 [scope=col]:nth-child(6)::after{left:calc(100% / var(--x) * 5)}.table-charts.line.step-2 [scope=col]:nth-child(7)::after{left:calc(100% / var(--x) * 6)}.table-charts.line.step-2 [scope=col]:nth-child(8)::after{left:calc(100% / var(--x) * 7)}.table-charts.line.step-2 [scope=col]:nth-child(9)::after{left:calc(100% / var(--x) * 8)}.table-charts.line.step-2 [scope=col]:nth-child(10)::after{left:calc(100% / var(--x) * 9)}.table-charts.line.step-2 [scope=col]:nth-child(11)::after{left:calc(100% / var(--x) * 10)}.table-charts.line.step-2 [scope=col]:nth-child(12)::after{left:calc(100% / var(--x) * 11)}.table-charts.line.step-2 [scope=col]:nth-child(13)::after{left:calc(100% / var(--x) * 12)}.table-charts.line.step-2 [scope=col]:hover::after{opacity:.75}.table-charts.line.step-3 td{--value: var(--1);--term: var(--t-1);--top: calc( (var(--height) - ( var(--value) / var(--y) * 100% ) ) );line-height:1.5}.table-charts.line.step-3 td::before{content:\"\";height:1.5rem;position:absolute;transform:translateX(-50%);width:inherit;z-index:10}.table-charts.line.step-3 td::after{--arrow: calc(100% - 0.25rem);background-color:#444;clip-path:polygon(0% 0%, 100% 0%, 100% var(--arrow), calc(50% - 0.25rem) var(--arrow), 50% 100%, calc(50% + 0.25rem) var(--arrow), 0% var(--arrow));color:#fff;content:var(--term) \" \" var(--year) \"\\a\" counter(value) \" °C\";counter-reset:value var(--value);opacity:0;padding:.5rem;left:calc(var(--offset)*3);pointer-events:none;position:absolute;top:var(--top, 100);transform-origin:50% calc(100% + 10px);transform:translate3d(-50%, -125%, 0) perspective(1000px) rotate3d(1, 0, 0, 45deg);transition:opacity .2s cubic-bezier(0, 0.5, 0.5, 1),transform .2s cubic-bezier(0, 0.5, 0.5, 1);will-change:opacity,transform;white-space:pre;z-index:5}.table-charts.line.step-3 td:nth-child(2)::after{--value: var(--1);--term: var(--t-1);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 1 ) + var(--offset))}.table-charts.line.step-3 td:nth-child(3)::after{--value: var(--2);--term: var(--t-2);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 2 ) + var(--offset))}.table-charts.line.step-3 td:nth-child(4)::after{--value: var(--3);--term: var(--t-3);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 3 ) + var(--offset))}.table-charts.line.step-3 td:nth-child(5)::after{--value: var(--4);--term: var(--t-4);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 4 ) + var(--offset))}.table-charts.line.step-3 td:nth-child(6)::after{--value: var(--5);--term: var(--t-5);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 5 ) + var(--offset))}.table-charts.line.step-3 td:nth-child(7)::after{--value: var(--6);--term: var(--t-6);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 6 ) + var(--offset))}.table-charts.line.step-3 td:nth-child(8)::after{--value: var(--7);--term: var(--t-7);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 7 ) + var(--offset))}.table-charts.line.step-3 td:nth-child(9)::after{--value: var(--8);--term: var(--t-8);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 8 ) + var(--offset))}.table-charts.line.step-3 td:nth-child(10)::after{--value: var(--9);--term: var(--t-9);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 9 ) + var(--offset))}.table-charts.line.step-3 td:nth-child(11)::after{--value: var(--10);--term: var(--t-10);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 10 ) + var(--offset))}.table-charts.line.step-3 td:nth-child(12)::after{--value: var(--11);--term: var(--t-11);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 11 ) + var(--offset))}.table-charts.line.step-3 td:nth-child(13)::after{--value: var(--12);--term: var(--t-12);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 12 ) + var(--offset))}.table-charts.line.step-3 td:hover::after{opacity:1;transform:translate3d(-50%, -125%, 0) perspective(1000px) rotate3d(1, 0, 0, 0deg);transition:opacity .2s cubic-bezier(0.5, 0, 1, 0.5),transform .2s cubic-bezier(0.5, 0, 1, 0.5)}.table-charts.line.points [style]::before{background:var(--color, currentColor) var(--background);clip-path:polygon(calc(100% / var(--x) * 1 + var(--offset)) calc(100% - var(--1) / var(--y) * 100%), calc(100% / var(--x) * 2 + var(--offset)) calc(100% - var(--2) / var(--y) * 100%), calc(100% / var(--x) * 3 + var(--offset)) calc(100% - var(--3) / var(--y) * 100%), calc(100% / var(--x) * 4 + var(--offset)) calc(100% - var(--4) / var(--y) * 100%), calc(100% / var(--x) * 5 + var(--offset)) calc(100% - var(--5) / var(--y) * 100%), calc(100% / var(--x) * 6 + var(--offset)) calc(100% - var(--6) / var(--y) * 100%), calc(100% / var(--x) * 7 + var(--offset)) calc(100% - var(--7) / var(--y) * 100%), calc(100% / var(--x) * 8 + var(--offset)) calc(100% - var(--8) / var(--y) * 100%), calc(100% / var(--x) * 9 + var(--offset)) calc(100% - var(--9) / var(--y) * 100%), calc(100% / var(--x) * 10 + var(--offset)) calc(100% - var(--10) / var(--y) * 100%), calc(100% / var(--x) * 11 + var(--offset)) calc(100% - var(--11) / var(--y) * 100%), calc(100% / var(--x) * 12 + var(--offset)) calc(100% - var(--12) / var(--y) * 100%), calc(100% / var(--x) * 13 + var(--offset)) calc(100% - var(--12) / var(--y) * 100%), 100% calc(100% - var(--12) / var(--y) * 100%), 100% calc((100% + 0.25rem) - var(--12) / var(--y) * 100%), calc(100% / var(--x) * 13 + var(--offset)) calc((100% + 0.25rem) - var(--12) / var(--y) * 100%), calc(100% / var(--x) * 12 + var(--offset)) calc((100% + 0.25rem) - var(--12) / var(--y) * 100%), calc(100% / var(--x) * 11 + var(--offset)) calc((100% + 0.25rem) - var(--11) / var(--y) * 100%), calc(100% / var(--x) * 10 + var(--offset)) calc((100% + 0.25rem) - var(--10) / var(--y) * 100%), calc(100% / var(--x) * 9 + var(--offset)) calc((100% + 0.25rem) - var(--9) / var(--y) * 100%), calc(100% / var(--x) * 8 + var(--offset)) calc((100% + 0.25rem) - var(--8) / var(--y) * 100%), calc(100% / var(--x) * 7 + var(--offset)) calc((100% + 0.25rem) - var(--7) / var(--y) * 100%), calc(100% / var(--x) * 6 + var(--offset)) calc((100% + 0.25rem) - var(--6) / var(--y) * 100%), calc(100% / var(--x) * 5 + var(--offset)) calc((100% + 0.25rem) - var(--5) / var(--y) * 100%), calc(100% / var(--x) * 4 + var(--offset)) calc((100% + 0.25rem) - var(--4) / var(--y) * 100%), calc(100% / var(--x) * 3 + var(--offset)) calc((100% + 0.25rem) - var(--3) / var(--y) * 100%), calc(100% / var(--x) * 2 + var(--offset)) calc((100% + 0.25rem) - var(--2) / var(--y) * 100%), calc(100% / var(--x) * 1 + var(--offset)) calc((100% + 0.25rem) - var(--1) / var(--y) * 100%));transition:opacity .3s cubic-bezier(0.5, 0, 0.5, 1)}.table-charts.line.points [style] th::before{background:var(--color, currentColor) var(--background);content:\"\";display:inline-block;height:1rem;transform:translate3d(-0.2rem, 0.1rem, 0);width:1rem}.table-charts.line.points [style] td{--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) )}.table-charts.line.points [style] td::before{--size: 1rem;background:var(--color, currentColor) var(--background);border:2px solid #fff;border-radius:50%;box-shadow:0 0 0.25rem rgba(0,0,0,.5);content:\"\";height:var(--size);left:calc(var(--offset)*3);position:absolute;top:var(--top, 100);transform:translate3d(calc(var(--size) / -2), calc(var(--size) / -2), 0);transition:opacity .3s cubic-bezier(0.5, 0, 0.5, 1),transform .3s cubic-bezier(0.5, 0, 0.5, 1);width:var(--size);z-index:4}.table-charts.line.points [style] td:nth-of-type(2)::before{--value: var(--2);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 2 ) + var(--offset))}.table-charts.line.points [style] td:nth-of-type(3)::before{--value: var(--3);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 3 ) + var(--offset))}.table-charts.line.points [style] td:nth-of-type(4)::before{--value: var(--4);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 4 ) + var(--offset))}.table-charts.line.points [style] td:nth-of-type(5)::before{--value: var(--5);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 5 ) + var(--offset))}.table-charts.line.points [style] td:nth-of-type(6)::before{--value: var(--6);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 6 ) + var(--offset))}.table-charts.line.points [style] td:nth-of-type(7)::before{--value: var(--7);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 7 ) + var(--offset))}.table-charts.line.points [style] td:nth-of-type(8)::before{--value: var(--8);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 8 ) + var(--offset))}.table-charts.line.points [style] td:nth-of-type(9)::before{--value: var(--9);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 9 ) + var(--offset))}.table-charts.line.points [style] td:nth-of-type(10)::before{--value: var(--10);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 10 ) + var(--offset))}.table-charts.line.points [style] td:nth-of-type(11)::before{--value: var(--11);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 11 ) + var(--offset))}.table-charts.line.points [style] td:nth-of-type(12)::before{--value: var(--12);--top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );left:calc(( 100% / var(--x) * 12 ) + var(--offset))}.table-charts.line.points [style]:nth-child(1n+1){--background: var(--checkers)}.table-charts.line.points [style]:nth-child(2n+2){--background: var(--hexagons)}.table-charts.line.points [style]:nth-child(3n+3){--background: var(--triangles)}.table-charts.line.points [style]:nth-child(4n+4){--background: var(--zig)}.table-charts.line.points [style]:nth-child(5n+5){--background: var(--stripes)}.table-charts.line.points [style]:nth-child(6n+6){--background: var(--dots)}.table-charts.line.points tbody:hover [style]::before,.table-charts.line.points tbody:hover [style] td::before{opacity:.25}.table-charts.line.points tbody:hover [style]:hover::before,.table-charts.line.points tbody:hover [style]:hover td::before{opacity:1}.table-charts.line.points tbody:hover [style]:hover td::before{transform:translate3d(calc(var(--size) / -2), calc(var(--size) / -2), 0) scale(1.25)}.table-charts.line.points [scope=col]:not(:first-child)::after{mix-blend-mode:multiply}.table-charts.line.points [scope=col]:not(:first-child):hover::after{opacity:.5}@media screen and (min-width: 30em)and (-ms-high-contrast: active){.table-charts.line.line [style]::before{background:linear-gradient(to top, ButtonHighlight, Highlight 75%)}}}@supports(clip-path: polygon(0% 0%, calc(100% - var(--1) * 100% / var(--scale)) 100%, 100% 100%)){.table-charts .radar-container .fieldset{display:flex !important}.table-charts.radar{--radius: 10rem;--unitless-radius: calc( 1024 / 16 / 5 );--size: calc( var(--radius) / var(--scale) );--part: calc( 360deg / var(--items) );background-image:repeating-radial-gradient(circle at 50%, rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.2) 2px, transparent 0, transparent calc(var(--size) * var(--step))),repeating-radial-gradient(circle at 50%, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1) 2px, transparent 0, transparent var(--size));border:2px solid;border-radius:50%;contain:layout;counter-reset:scale var(--scale);height:calc(var(--radius)*2);margin:auto;overflow:visible;position:relative;width:calc(var(--radius)*2)}.table-charts.radar caption{background:none;bottom:-10rem;position:absolute}.table-charts.radar.step-1 [scope=col]{--away: calc( (var(--radius) * -1) - 50% );left:50%;margin:0;padding:0 1rem;position:absolute;top:50%;transform:translate3d(-50%, -50%, 0) rotate(calc(var(--part) * var(--index, 1))) translate(var(--away)) rotate(calc(var(--part) * var(--index, 1) * -1))}.table-charts.radar.step-1 td:nth-of-type(1),.table-charts.radar.step-1 [scope=col]:nth-of-type(1){--index: 1}.table-charts.radar.step-1 td:nth-of-type(2),.table-charts.radar.step-1 [scope=col]:nth-of-type(2){--index: 2}.table-charts.radar.step-1 td:nth-of-type(3),.table-charts.radar.step-1 [scope=col]:nth-of-type(3){--index: 3}.table-charts.radar.step-1 td:nth-of-type(4),.table-charts.radar.step-1 [scope=col]:nth-of-type(4){--index: 4}.table-charts.radar.step-1 td:nth-of-type(5),.table-charts.radar.step-1 [scope=col]:nth-of-type(5){--index: 5}.table-charts.radar.step-1 td:nth-of-type(6),.table-charts.radar.step-1 [scope=col]:nth-of-type(6){--index: 6}.table-charts.radar.step-1 td:nth-of-type(7),.table-charts.radar.step-1 [scope=col]:nth-of-type(7){--index: 7}.table-charts.radar.step-1 [scope=col]::after{color:#639;display:block;font-size:small;font-weight:400}.table-charts.radar.step-1 [scope=col]:nth-child(1)::after{counter-reset:value var(--1);content:counter(value) \" / \" counter(scale)}.table-charts.radar.step-1 [scope=col]:nth-child(2)::after{counter-reset:value var(--2);content:counter(value) \" / \" counter(scale)}.table-charts.radar.step-1 [scope=col]:nth-child(3)::after{counter-reset:value var(--3);content:counter(value) \" / \" counter(scale)}.table-charts.radar.step-1 [scope=col]:nth-child(4)::after{counter-reset:value var(--4);content:counter(value) \" / \" counter(scale)}.table-charts.radar.step-1 [scope=col]:nth-child(5)::after{counter-reset:value var(--5);content:counter(value) \" / \" counter(scale)}.table-charts.radar.step-1 [scope=col]:nth-child(6)::after{counter-reset:value var(--6);content:counter(value) \" / \" counter(scale)}.table-charts.radar.step-1 [scope=col]:nth-child(7)::after{counter-reset:value var(--7);content:counter(value) \" / \" counter(scale)}.table-charts.radar.step-2 td{--skew: calc( 90deg - var(--part) );border-bottom:1px solid #8a2be2;height:50%;left:0;margin:0;position:absolute;top:0;width:50%}.table-charts.radar.step-2 td:nth-of-type(1) span{--pos: calc( 100% - (var(--2) * 100% / (var(--scale) * var(--ratio) ) ) );clip-path:polygon(100% var(--pos), calc(100% - var(--1) * 100% / var(--scale)) 100%, 100% 100%)}.table-charts.radar.step-2 td:nth-of-type(2) span{--pos: calc( 100% - (var(--3) * 100% / (var(--scale) * var(--ratio) ) ) );clip-path:polygon(100% var(--pos), calc(100% - var(--2) * 100% / var(--scale)) 100%, 100% 100%)}.table-charts.radar.step-2 td:nth-of-type(3) span{--pos: calc( 100% - (var(--4) * 100% / (var(--scale) * var(--ratio) ) ) );clip-path:polygon(100% var(--pos), calc(100% - var(--3) * 100% / var(--scale)) 100%, 100% 100%)}.table-charts.radar.step-2 td:nth-of-type(4) span{--pos: calc( 100% - (var(--5) * 100% / (var(--scale) * var(--ratio) ) ) );clip-path:polygon(100% var(--pos), calc(100% - var(--4) * 100% / var(--scale)) 100%, 100% 100%)}.table-charts.radar.step-2 td:nth-of-type(5) span{--pos: calc( 100% - (var(--6) * 100% / (var(--scale) * var(--ratio) ) ) );clip-path:polygon(100% var(--pos), calc(100% - var(--5) * 100% / var(--scale)) 100%, 100% 100%)}.table-charts.radar.step-2 td:nth-of-type(6) span{--pos: calc( 100% - (var(--7) * 100% / (var(--scale) * var(--ratio) ) ) );clip-path:polygon(100% var(--pos), calc(100% - var(--6) * 100% / var(--scale)) 100%, 100% 100%)}.table-charts.radar.step-2 td:nth-of-type(7) span{--pos: calc( 100% - (var(--8) * 100% / (var(--scale) * var(--ratio) ) ) );clip-path:polygon(100% var(--pos), calc(100% - var(--7) * 100% / var(--scale)) 100%, 100% 100%)}.table-charts.radar.step-2 td::after,.table-charts.radar.step-2 td::before{display:none}.table-charts.radar.step-2 span{--ratio: 1;background:linear-gradient(to top left, blueviolet 10%, DarkBlue 75%);filter:drop-shadow(0 0 1rem indigo);height:100%;position:absolute;width:100%}.table-charts.radar.step-3 td{transform:rotate(calc(var(--part) * var(--index, 1))) skew(var(--skew));transform-origin:100% 100%}.table-charts.radar.step-4 span{--opposite: calc( 180 - (90 + (90 - (360 / var(--items)))) );--angle: calc( var(--opposite) * 0.01745329251 );--sin-term-angle-1: var(--angle);--sin-term-angle-2: calc((var(--angle) * var(--angle) * var(--angle)) / 6);--sin-term-angle-3: calc((var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle)) / 120);--sin-term-angle-4: calc((var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle)) / 5040);--sin-term-angle-5: calc((var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle) * var(--angle)) / 362880);--sin-angle: calc(var(--sin-term-angle-1) - var(--sin-term-angle-2) + var(--sin-term-angle-3) - var(--sin-term-angle-4) + var(--sin-term-angle-5));--hypo: calc( var(--unitless-radius) / var(--sin-angle) );--ratio: calc( var(--hypo) / var(--unitless-radius) );will-change:clip-path;transition:clip-path .5s ease-in-out}.table-charts.radar.radar-multiple{margin-bottom:12rem}.table-charts.radar.radar-multiple [scope=col]::after{display:none}.table-charts.radar.radar-multiple tbody{columns:var(--areas);vertical-align:bottom}.table-charts.radar.radar-multiple [scope=row]{bottom:-8rem;height:2rem;left:1rem;position:absolute}.table-charts.radar.radar-multiple [scope=row]::before{background:var(--color, currentColor);content:\"\";display:inline-block;height:1rem;margin-right:.25rem;transform:translate3d(0, 0.1rem, 0);width:1rem}.table-charts.radar.radar-multiple tr:nth-child(2) [scope=row]{left:calc( 1rem + (100% / var(--areas)) * 1)}.table-charts.radar.radar-multiple td{align-items:flex-end;border-color:var(--color, currentColor);display:flex;justify-content:flex-end;opacity:.5;pointer-events:none;transition:opacity .2s cubic-bezier(0.5, 0, 0.5, 1);will-change:opacity;z-index:0}.table-charts.radar.radar-multiple td::after{color:var(--color, currentColor);display:block;font-size:small;font-weight:700;text-indent:-0.5rem;transform:skew(calc(var(--skew) * -1)) rotate(calc(var(--part) * var(--index, 1) * -1));transform-origin:0 0;transition:inherit;width:100%;will-change:inherit;white-space:nowrap}.table-charts.radar.radar-multiple td:nth-of-type(1)::after{counter-reset:value var(--1);content:counter(value);width:calc(var(--1)*100%/var(--scale))}.table-charts.radar.radar-multiple td:nth-of-type(2)::after{counter-reset:value var(--2);content:counter(value);width:calc(var(--2)*100%/var(--scale))}.table-charts.radar.radar-multiple td:nth-of-type(3)::after{counter-reset:value var(--3);content:counter(value);width:calc(var(--3)*100%/var(--scale))}.table-charts.radar.radar-multiple td:nth-of-type(4)::after{counter-reset:value var(--4);content:counter(value);width:calc(var(--4)*100%/var(--scale))}.table-charts.radar.radar-multiple td:nth-of-type(5)::after{counter-reset:value var(--5);content:counter(value);width:calc(var(--5)*100%/var(--scale))}.table-charts.radar.radar-multiple td:nth-of-type(6)::after{counter-reset:value var(--6);content:counter(value);width:calc(var(--6)*100%/var(--scale))}.table-charts.radar.radar-multiple td:nth-of-type(7)::after{counter-reset:value var(--7);content:counter(value);width:calc(var(--7)*100%/var(--scale))}.table-charts.radar.radar-multiple span{background:var(--color, currentColor);pointer-events:auto}@supports(mask-image: url()){.table-charts.radar.radar-multiple span{mask-image:radial-gradient(circle at bottom right, rgb(0, 0, 0), rgba(0, 0, 0, 0.5))}}@media screen and (min-width: 30em)and (hover: hover){.table-charts.radar.radar-multiple td{opacity:.25}.table-charts.radar.radar-multiple td::after{opacity:0}.table-charts.radar.radar-multiple tr:hover td{opacity:1;z-index:1}.table-charts.radar.radar-multiple tr:hover td::after{opacity:inherit}}}@supports(clip-path: polygon(50% calc(50% + (var(--gt-25, 0))))){.table-charts .pie-container .fieldset{display:flex !important}.table-charts.pie.step-1{margin:0 auto;padding-top:calc(32em - 2rem);position:relative}.table-charts.pie.step-1 tbody{--side: calc( 64em / 2 );--hypo: calc( 1024 / 16 / 2 );display:table-row}.table-charts.pie.step-1 tr{display:table-cell;transition:opacity .3s cubic-bezier(0.5, 0, 0.5, 1);will-change:opacity}.table-charts.pie.step-1 tr:nth-child(1n+1){--background: var(--checkers)}.table-charts.pie.step-1 tr:nth-child(2n+2){--background: var(--hexagons)}.table-charts.pie.step-1 tr:nth-child(3n+3){--background: var(--triangles)}.table-charts.pie.step-1 tr:nth-child(4n+4){--background: var(--zig)}.table-charts.pie.step-1 tr:nth-child(5n+5){--background: var(--stripes)}.table-charts.pie.step-1 tr:nth-child(6n+6){--background: var(--dots)}.table-charts.pie.step-1 [scope=row]{padding-right:.5rem}.table-charts.pie.step-1 [scope=row]::before{background:var(--color, currentColor) var(--background);content:\"\";display:inline-block;height:1rem;transform:translate3d(-0.2rem, 0.1rem, 0);width:1rem}.table-charts.pie.step-2 td{--position: calc(var(--start, 0) * .01turn)}.table-charts.pie.step-2 td::after,.table-charts.pie.step-2 td::before{left:50%;position:absolute;top:40%;transform-origin:center center}.table-charts.pie.step-2 td::before{--zoom: .75;--part: calc( var(--value) * 3.6 );--main-angle: calc( var(--part) - ( 90 * ( var(--gt-25, 0) + var(--gt-50, 0) + var(--gt-75, 0) ) ) );--β: calc( var(--main-angle) * 0.01745329251 );--α: calc( ( 90 - var(--main-angle) ) * 0.01745329251 );--sin-term-β-1: var(--β);--sin-term-β-2: calc((var(--β) * var(--β) * var(--β)) / 6);--sin-term-β-3: calc((var(--β) * var(--β) * var(--β) * var(--β) * var(--β)) / 120);--sin-term-β-4: calc((var(--β) * var(--β) * var(--β) * var(--β) * var(--β) * var(--β) * var(--β)) / 5040);--sin-term-β-5: calc((var(--β) * var(--β) * var(--β) * var(--β) * var(--β) * var(--β) * var(--β) * var(--β) * var(--β)) / 362880);--sin-β: calc(var(--sin-term-β-1) - var(--sin-term-β-2) + var(--sin-term-β-3) - var(--sin-term-β-4) + var(--sin-term-β-5));--sin-term-α-1: var(--α);--sin-term-α-2: calc((var(--α) * var(--α) * var(--α)) / 6);--sin-term-α-3: calc((var(--α) * var(--α) * var(--α) * var(--α) * var(--α)) / 120);--sin-term-α-4: calc((var(--α) * var(--α) * var(--α) * var(--α) * var(--α) * var(--α) * var(--α)) / 5040);--sin-term-α-5: calc((var(--α) * var(--α) * var(--α) * var(--α) * var(--α) * var(--α) * var(--α) * var(--α) * var(--α)) / 362880);--sin-α: calc(var(--sin-term-α-1) - var(--sin-term-α-2) + var(--sin-term-α-3) - var(--sin-term-α-4) + var(--sin-term-α-5));--B: calc( var(--hypo) * var(--sin-β) );--A: calc( var(--hypo) * var(--sin-α) );--pos-B: calc( ( var(--B) * 100 / var(--hypo) ) / 2 );--pos-A: calc( ( var(--A) * 100 / var(--hypo) ) / 2 );background:var(--color, currentColor) var(--background);clip-path:polygon(50% 50%, 50% 0%, 100% 0%, calc(50% + var(--pos-B) * 1% * var(--lt-25, 1) + var(--gt-25, 0) * 50%) calc(50% - var(--pos-A) * 1% * var(--lt-25, 1)), calc(50% + var(--gt-25, 0) * 50%) calc(50% + var(--gt-25, 0) * 50%), calc(50% + var(--pos-A) * 1% * var(--lt-50, 1) + var(--gt-50, 0) * 50%) calc(50% + var(--pos-B) * 1% * var(--lt-50, 1) + var(--gt-50, 0) * 50%), calc(50% - var(--gt-50, 0) * 50%) calc(50% + var(--gt-50, 0) * 50%), calc(50% - var(--pos-B) * 1% * var(--lt-75, 1) - var(--gt-75, 0) * 50%) calc(50% + var(--pos-A) * 1% * var(--lt-75, 1)), calc(50% - var(--gt-75, 0) * 50%) calc(50% - var(--gt-75, 0) * 50%), calc(50% - var(--pos-A) * 1% * var(--gt-75, 0)) calc(50% - var(--pos-B) * 1% * var(--gt-75, 0)), 50% 50%);content:\"\";height:var(--side);mask-image:radial-gradient(circle at center, white 0%, white calc(var(--side) / 2), transparent calc(var(--side) / 2));transform:translate3d(-50%, -50%, 0) rotate(var(--position)) scale(var(--zoom));transition:transform .2s cubic-bezier(0.5, 0, 0.5, 1);width:var(--side);will-change:transform}.table-charts.pie.step-2 tr:hover td::before{--zoom: .8}.table-charts.pie.step-2 td::after{--arrow: calc(100% - 0.25rem);--axis: calc( var(--position) - .25turn + var(--value) * .005turn );--away: calc( var(--side) / 2 - 1rem );background-color:#444;color:#fff;content:var(--term) \" : \" counter(value) \" %\";counter-reset:value var(--value);opacity:0;padding:.5rem;pointer-events:none;transform-origin:50% calc(100% + 10px);transform:translate3d(-50%, -50%, 0) rotate(var(--axis)) translate(var(--away)) rotate(calc(var(--axis) * -1)) perspective(1000px) rotate3d(1, 0, 0, 45deg);transition:opacity .2s cubic-bezier(0, 0.5, 0.5, 1),transform .2s cubic-bezier(0, 0.5, 0.5, 1);will-change:opacity,transform}.table-charts.pie.step-2 tbody:hover tr{opacity:.5}.table-charts.pie.step-2 tbody:hover tr:hover{opacity:1}.table-charts.pie.step-2 tbody:hover tr:hover td::after{opacity:1;transform:translate3d(-50%, -50%, 0) rotate(var(--axis)) translate(var(--away)) rotate(calc(var(--axis) * -1)) perspective(1000px) rotate3d(1, 0, 0, 0deg);transition:opacity .2s cubic-bezier(0.5, 0, 1, 0.5),transform .2s cubic-bezier(0.5, 0, 1, 0.5)}.table-charts.pie.step-2.polar td::before{--zoom: 50;transform:translate3d(-50%, -50%, 0) rotate(var(--position)) scale(calc((var(--zoom) + var(--value) / (100 / var(--zoom))) / 100))}.table-charts.pie.step-2.polar tr:hover td::before{--zoom: 50}.table-charts.donut{mask-image:radial-gradient(circle at 50% calc(50% - 2rem), transparent 0%, transparent var(--offset), white calc(var(--offset) + 1px), white 100%)}.table-charts.donut td::after{--away: calc( var(--side) / 2 - 2.5rem )}@media screen and (min-width: 30em)and (-ms-high-contrast: active){.table-charts.pie tbody tr *::before{background-color:Window}.table-charts.pie tbody tr:nth-of-type(odd) *::before{background-color:WindowText}}}}","/* ==================== */\n/* == Switch\n/* ==================== */\n\nbutton[role=\"switch\"] {\n  background-color: rgba( palette( dominant, light ), .1 );\n  border-radius: rem( 22 ) !important;\n  box-sizing: content-box;\n  box-shadow: none !important;;\n  color: palette( dominant );\n  font-size: 1rem;\n  height: rem( 44 );\n  line-height: rem( 44 );\n  margin-left: $gutter * 2;\n  padding: 0 $gutter * 3;\n  position: relative;\n  transition: all .3s map-get( $timing-functions, 'enter' );\n  width: rem( 76 );\n  will-change: background-color;\n\n  &::before {\n    background: palette( default, contrast );\n    border-radius: rem( 22 );\n    content: \"\";\n    position: absolute;\n    height: rem( 38 );\n    left: rem( 4 );\n    top: rem( 4 );\n    transform: none;\n    transition: transform .3s map-get( $timing-functions, 'enter' ) 0s;\n    width: rem( 38 );\n    will-change: transform;\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: rgba( palette( dominant, light ), .075 );\n    color: palette( dominant, dark );\n    outline-color: transparent;\n    top: 0;\n  }\n\n  &[aria-checked=\"true\"] {\n    background-color: rgba( palette( success, light ), .3 );\n\n    &::before {\n      background: palette( success, dark );\n      transform: translateX(#{rem( 78 ) + $gutter * 3});\n    }\n  }\n\n  > *:first-child,\n  &[aria-checked=\"true\"] > *:last-child {\n    display: none;\n  }\n\n  &[aria-checked=\"true\"] > *:first-child {\n    display: block;\n  }\n}\n\n@media screen and (-ms-high-contrast: active) {\n  button[role=\"switch\"] {\n    background-color: buttonFace;\n    border: 1px solid currentColor !important;\n    color: buttonText;\n\n    > span {\n      background-color: inherit;\n    }\n\n    &::before {\n      background: currentColor;\n    }\n\n    @supports (--css: var(--iables)) {\n      button[role=\"switch\"][aria-checked=\"true\"] {\n        background-color: highlight;\n        color: highlightText;\n      }\n    }\n  }\n}\n","/* ==================== */\n/* == sseeeedd\n/* ==================== */\n@use \"sass:math\";\n@use \"sass:list\";\n\n@import \"sseeeedd-func\";\n@import \"sseeeedd-vars\";\n@import \"switch\";\n\n.pl-5 {\n  padding-left: 5rem;\n}\n\n.fieldset {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.illustration[role=\"group\"] {\n  margin: $gutter * 3 auto;\n  max-width: min-content;\n\n  img {\n    max-width: none;\n  }\n}\n\nbody > :not(.modeplan) .slide {\n    overflow-x: hidden !important;\n\n    &[id=\"white-slide\"] {\n      background: palette( default, contrast );\n    }\n}\n\n/* ==================== */\n/* == Tables\n/* ==================== */\n\ntable {\n  font-size: 1rem;\n  margin: auto;\n}\n\npre[class*=\"language-\"] {\n    overflow-y: hidden;\n}\n\npre code[class*=\"language-\"] {\n  font-size: .875rem;\n}\n\n@media screen and (min-width: 48em) {\n  pre code[class*=\"language-\"] {\n    font-size: 1.25rem;\n  }\n}\n\n.table-ffoodd {\n  background: palette( default, contrast );\n  border-collapse: collapse;\n  caption-side: top;\n  font-feature-settings: \"tnum\";\n  width: 100%;\n  vertical-align: top;\n\n  > caption:first-child {\n    font-style: italic;\n    margin: 0;\n    padding: rem( 40 ) $gutter;\n  }\n\n  th,\n  td {\n    padding: $gutter * 0.5 rem( 12 );\n    text-align: left;\n\n    thead &,\n    tbody & {\n      border-bottom: 1px solid palette( default, secondary );\n    }\n  }\n\n  th,\n  table strong {\n    color: palette( dominant, dark );\n  }\n\n  td {\n    line-height: 1.25;\n    max-width: 100%;\n  }\n\n  tbody {\n    border: 1px solid palette( default, secondary );\n  }\n}\n\n/* ==================== */\n/* == Charts\n/* ==================== */\n[class*=\"charts\"] {\n  [role=\"presentation\"] {\n    display: none;\n  }\n\n  abbr[title] {\n    border-bottom: 0;\n    font-size: small;\n    font-weight: normal;\n    text-transform: none;\n  }\n}\n\n/* ==================== */\n/* == Table based Charts\n/* ==================== */\n.table-container .fieldset {\n  display: none !important;\n}\n\n.table-charts {\n  caption-side: bottom;\n  empty-cells: hide;\n  margin: 1.5em auto;\n  overflow: hidden;\n  padding: 1em;\n\n  /**\n   * @note Defining a CSS custom property for each inlined SVG pattern\n   * @author Trys Mudford\n   * @link https://www.trysmudford.com/blog/using-css-custom-properties/\n   * @via Jeremy Keith\n   * @link https://adactio.com/journal/15075\n   */\n  @each $name, $pattern in $patterns {\n    --#{$name}: url(\"#{$pattern}\");\n  }\n\n  > caption:first-child {\n    background: inherit;\n    font-style: normal;\n    padding: $gutter 0;\n  }\n}\n\ntable:not(.table-charts) .sr-only {\n  clip: auto !important;\n  clip-path: none !important;\n  height: auto !important;\n  overflow: visible !important;\n  position: static !important;\n  width: auto !important;\n  white-space: normal !important;\n}\n\n@media screen and (min-width: em(480)) {\n  .table-charts {\n    border-collapse: separate;\n    border-spacing: 0;\n    /**\n     * @note Trying to improve paint & layout performances\n     * @link https://developer.mozilla.org/fr/docs/Web/CSS/contain\n     */\n    contain: content;\n\n    th,\n    td {\n      border: 0;\n      padding: 0;\n\n      &:empty {\n        display: none !important;\n      }\n    }\n\n    /** Bar charts */\n    @supports (grid-template-columns: repeat(var(--scale, 100), minmax(0, 1fr))) {\n      &.bar {\n\n        &.step-1 {\n          caption {\n            text-align: initial;\n            text-indent: em( 256 );\n          }\n\n          tbody tr {\n            display: grid;\n            grid-auto-rows: 1fr;\n            grid-row-gap: $gutter * 0.5;\n            grid-template-columns: minmax(min-content, em( 240 )) repeat(var(--scale, 100), minmax(0, 1fr)) 10ch;\n            transition: opacity .2s map-get( $timing-functions, 'move' );\n\n            th {\n              grid-column: 1 / 1;\n              margin: $gutter * 0.5 0 0;\n              padding: 0 $gutter 0 0;\n              text-align: right;\n            }\n\n            td {\n              background: currentColor;\n              grid-column: list.slash(2, var(--value, 0));\n              margin: $gutter * 0.5 0 0;\n              position: relative;\n            }\n          }\n        }\n\n        &.step-2 {\n          tbody tr td span {\n            background: inherit;\n            -webkit-text-fill-color: transparent;\n            -webkit-background-clip: text;\n            font-weight: bold;\n            left: 100%;\n            line-height: 1.5;\n            position: absolute;\n          }\n        }\n\n        &.step-3 {\n          tbody tr {\n            td {\n              --size: calc(var(--scale, 100) * 100%);\n              --position: calc(var(--value, 0) / var(--scale, 100) * 100%);\n              background:\n                  linear-gradient(to right,\n                    palette( success, dark ),\n                    palette( dominant ),\n                    palette( secondary ),\n                    palette( accent ),\n                    palette( alert )\n                  ) var(--position) list.slash(0%, var(--size)) 100%,\n                  transparent var(--background) center / contain;\n              background-blend-mode: hard-light;\n            }\n\n            @each $name, $pattern in $patterns {\n              $i: index($patterns, ($name $pattern));\n\n              &:nth-child(#{$i}n + #{$i}) {\n                --background: var(--#{$name}); /* 1 */\n              }\n            }\n          }\n        }\n\n        &.step-4 {\n          &:hover {\n            tr {\n              opacity: .5;\n            }\n\n            tr:hover {\n              opacity: 1;\n            }\n          }\n\n          /**\n           * @note Custom color palette for WHCM\n           * @note Inspired by Greg Whitworth's post\n           * @link http://www.gwhitworth.com/blog/2017/04/how-to-use-ms-high-contrast\n           */\n          @media screen and (-ms-high-contrast: active) {\n            td {\n              background-image:\n                linear-gradient(to right,\n                  Window,\n                  ButtonFace,\n                  ButtonShadow,\n                  ButtonText,\n                  highlight\n                ),\n                var(--background);\n            }\n          }\n\n          &.waterfall {\n            @each $number in 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 {\n              tr:nth-of-type(#{$number}) td {\n                grid-column: list.slash(var(--#{$number - 1}, 2), var(--value, 0));\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** Line charts */\n    @supports (clip-path: polygon(0% calc(100% - (var(--1) * 100% / var(--y))))) {\n      &.line {\n        --offset: calc((100% / var(--x)) / 2);\n        --height: calc( #{$width * 0.5} - #{$gutter * 2} );\n        --bottom: calc( 100% - var(--height) );\n        position: relative;\n        transition:\n          background .3s map-get( $timing-functions, 'move' ),\n          color .3s map-get( $timing-functions, 'move' );\n\n        &::after {\n          bottom: var(--bottom);\n          content: \"\";\n          position: absolute;\n          top: 0;\n          width: 100%;\n          z-index: 1;\n        }\n\n        tr::before {\n          content: \"\";\n          position: absolute;\n        }\n\n        [scope=\"row\"],\n        thead th:first-child {\n            color: var(--color, currentColor);\n            text-align: left;\n        }\n\n        th,\n        td {\n          background: palette( default, contrast );\n          font-weight: bold;\n          text-align: center;\n          width: calc( 100% / var(--x) );\n\n          &:hover {\n            color: palette( secondary );\n          }\n        }\n\n        &.step-1 {\n            padding: var(--height) 0 $gutter;\n\n            &::after {\n              --scale: calc( ( 100% - (var(--y) * 1px) ) / var(--y) );\n              background:\n                repeating-linear-gradient(\n                  to bottom,\n                  white, white var(--scale),\n                  rgba(0, 0, 0, .25) calc(var(--scale) + 1px)\n                );\n              bottom: var(--bottom);\n              content: \"\";\n              position: absolute;\n              top: 0;\n              width: 100%;\n              z-index: 1;\n            }\n        }\n\n        &.step-2 {\n            [style]::before {\n              bottom: var(--bottom);\n              background: linear-gradient(to top, palette( secondary, light ), palette( alert ) 75%);\n              clip-path: polygon(\n                0% 100%,\n                calc((100% / var(--x) * 1)) 100%,\n                calc((100% / var(--x) * 1)) calc(100% - (var(--1) / var(--y) * 100%)),\n                calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--1) / var(--y) * 100%)),\n                calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--2) / var(--y) * 100%)),\n                calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--3) / var(--y) * 100%)),\n                calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--4) / var(--y) * 100%)),\n                calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--5) / var(--y) * 100%)),\n                calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--6) / var(--y) * 100%)),\n                calc((100% / var(--x) * 7) + var(--offset)) calc(100% - (var(--7) / var(--y) * 100%)),\n                calc((100% / var(--x) * 8) + var(--offset)) calc(100% - (var(--8) / var(--y) * 100%)),\n                calc((100% / var(--x) * 9) + var(--offset)) calc(100% - (var(--9) / var(--y) * 100%)),\n                calc((100% / var(--x) * 10) + var(--offset)) calc(100% - (var(--10) / var(--y) * 100%)),\n                calc((100% / var(--x) * 11) + var(--offset)) calc(100% - (var(--11) / var(--y) * 100%)),\n                calc((100% / var(--x) * 12) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)),\n                100% calc(100% - (var(--12) / var(--y) * 100%)),\n                100% 100%,\n                0% 100%\n              );\n              content: \"\";\n              position: absolute;\n              top: 0;\n              width: 100%;\n              z-index: 2;\n            }\n\n            [scope=\"col\"] {\n              &:not(:first-child)::after {\n                background-color: palette( default, contrast );\n                background-image: var(--stripes);\n                background-blend-mode: exclusion;\n                bottom: $gutter * 4;\n                content: \"\";\n                height: calc(100% - #{$gutter * 4});\n                mix-blend-mode: soft-light;\n                opacity: 0;\n                position: absolute;\n                transition: opacity .3s map-get( $timing-functions, 'move' );\n                width: inherit;\n                z-index: 3;\n              }\n\n              @each $number in 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 {\n                &:nth-child(#{$number})::after {\n                  left: calc(100% / var(--x) * #{$number - 1});\n                }\n              }\n\n              &:hover::after {\n                opacity: .75;\n              }\n            }\n        }\n\n        &.step-3 {\n          td {\n            --value: var(--1);\n            --term: var(--t-1);\n            --top: calc( (var(--height) - ( var(--value) / var(--y) * 100% ) ) );\n            line-height: 1.5;\n\n            &::before {\n              content: '';\n              height: 1.5rem;\n              position: absolute;\n              transform: translateX(-50%);\n              width: inherit;\n              z-index: 10;\n            }\n\n            /**\n             * 1.\n             * @note Using white-space and:\n             ** `\\A` to make a line-break\n             ** `\\A0` for a non-breakable space\n             * @note Based on CSS Secrets by\n             * @author Lea Verou\n             * @link https://lea.verou.me/2012/02/flexible-multiline-definition-lists-with-2-lines-of-css/\n             *\n             * 2.\n             * @note Display CSS integers custom properties with a trick using counters\n             * @author Cassie Evans\n             * @link https://codepen.io/cassie-codes/pen/22ea69e0f681d45f2f4c2ca5e6acf4ab\n             */\n            &::after {\n              --arrow: calc(100% - #{$gutter * 0.25});\n              background-color: palette( dominant );\n              clip-path: polygon(\n                0% 0%,\n                100% 0%,\n                100% var(--arrow),\n                calc(50% - #{$gutter * 0.25}) var(--arrow),\n                50% 100%,\n                calc(50% + #{$gutter * 0.25}) var(--arrow),\n                0% var(--arrow)\n              );\n              color: palette( dominant, contrast );\n              content: var(--term) \" \" var(--year) \"\\A \" counter(value) \"\\A0°C\"; /* 1 */\n              counter-reset: value var(--value);                                 /* 2 */\n              opacity: 0;\n              padding: $gutter * 0.5;\n              left: calc( var(--offset) * 3 );\n              pointer-events: none;\n              position: absolute;\n              top: var(--top, 100);\n              transform-origin: 50% calc(100% + 10px);\n              transform:\n                translate3d(-50%, -125%, 0)\n                perspective(1000px)\n                rotate3d(1, 0, 0, 45deg);\n              transition:\n                opacity .2s map-get( $timing-functions, 'enter' ),\n                transform .2s map-get( $timing-functions, 'enter' );\n              will-change: opacity, transform;\n              white-space: pre;\n              z-index: 5;\n            }\n\n            @each $number in 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 {\n              &:nth-child(#{$number})::after {\n                --value: var(--#{$number - 1});\n                --term: var(--t-#{$number - 1});\n                --top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );\n                left: calc( ( 100% / var(--x) * #{$number - 1} ) + var(--offset) );\n              }\n            }\n\n            &:hover::after {\n              opacity: 1;\n              transform:\n                translate3d(-50%, -125%, 0)\n                perspective(1000px)\n                rotate3d(1, 0, 0, 0deg);\n              transition:\n                opacity .2s map-get( $timing-functions, 'exit' ),\n                transform .2s map-get( $timing-functions, 'exit' );\n            }\n          }\n        }\n\n        &.points {\n          [style] {\n              &::before {\n                background: var(--color, currentColor) var(--background);\n                clip-path: polygon(\n                  calc((100% / var(--x) * 1) + var(--offset)) calc(100% - (var(--1) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 2) + var(--offset)) calc(100% - (var(--2) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 3) + var(--offset)) calc(100% - (var(--3) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 4) + var(--offset)) calc(100% - (var(--4) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 5) + var(--offset)) calc(100% - (var(--5) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 6) + var(--offset)) calc(100% - (var(--6) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 7) + var(--offset)) calc(100% - (var(--7) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 8) + var(--offset)) calc(100% - (var(--8) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 9) + var(--offset)) calc(100% - (var(--9) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 10) + var(--offset)) calc(100% - (var(--10) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 11) + var(--offset)) calc(100% - (var(--11) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 12) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 13) + var(--offset)) calc(100% - (var(--12) / var(--y) * 100%)),\n                  100% calc(100% - (var(--12) / var(--y) * 100%)),\n                  100% calc((100% + #{$gutter * 0.25}) - (var(--12) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 13) + var(--offset)) calc((100% + #{$gutter * 0.25}) - (var(--12) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 12) + var(--offset)) calc((100% + #{$gutter * 0.25}) - (var(--12) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 11) + var(--offset)) calc((100% + #{$gutter * 0.25}) - (var(--11) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 10) + var(--offset)) calc((100% + #{$gutter * 0.25}) - (var(--10) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 9) + var(--offset)) calc((100% + #{$gutter * 0.25}) - (var(--9) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 8) + var(--offset)) calc((100% + #{$gutter * 0.25}) - (var(--8) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 7) + var(--offset)) calc((100% + #{$gutter * 0.25}) - (var(--7) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 6) + var(--offset)) calc((100% + #{$gutter * 0.25}) - (var(--6) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 5) + var(--offset)) calc((100% + #{$gutter * 0.25}) - (var(--5) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 4) + var(--offset)) calc((100% + #{$gutter * 0.25}) - (var(--4) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 3) + var(--offset)) calc((100% + #{$gutter * 0.25}) - (var(--3) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 2) + var(--offset)) calc((100% + #{$gutter * 0.25}) - (var(--2) / var(--y) * 100%)),\n                  calc((100% / var(--x) * 1) + var(--offset)) calc((100% + #{$gutter * 0.25}) - (var(--1) / var(--y) * 100%))\n                );\n                transition: opacity .3s map-get( $timing-functions, 'move' );\n              }\n\n              th::before {\n                 background: var(--color, currentColor) var(--background);\n                 content: \"\";\n                 display: inline-block;\n                 height: 1rem;\n                 transform: translate3d(-.2rem, .1rem, 0);\n                 width: 1rem;\n              }\n\n              td {\n                --top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );\n\n                &::before {\n                  --size: #{$gutter};\n                  background: var(--color, currentColor) var(--background);\n                  border: 2px solid palette( default, contrast );\n                  border-radius: 50%;\n                  box-shadow: 0 0 #{$gutter * 0.25} rgba(0, 0, 0, .5);\n                  content: \"\";\n                  height: var(--size);\n                  left: calc( var(--offset) * 3 );\n                  position: absolute;\n                  top: var(--top, 100);\n                  transform: translate3d(calc(var(--size) / -2), calc(var(--size) / -2), 0);\n                  transition:\n                      opacity .3s map-get( $timing-functions, 'move' ),\n                      transform .3s map-get( $timing-functions, 'move' );\n                  width: var(--size);\n                  z-index: 4;\n                }\n\n                @each $number in 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 {\n                  &:nth-of-type(#{$number})::before {\n                    --value: var(--#{$number});\n                    --top: calc( (var(--height) - ( var(--value) / var(--y) * var(--height) ) ) );\n                    left: calc( ( 100% / var(--x) * #{$number} ) + var(--offset) );\n                  }\n                }\n              }\n          }\n\n          @each $name, $pattern in $patterns {\n           $i: index($patterns, ($name $pattern));\n\n           [style]:nth-child(#{$i}n + #{$i}) {\n             --background: var(--#{$name}); /* 1 */\n           }\n         }\n\n          tbody:hover [style]::before,\n          tbody:hover [style] td::before {\n              opacity: .25;\n          }\n\n          tbody:hover [style]:hover::before,\n          tbody:hover [style]:hover td::before {\n              opacity: 1;\n          }\n\n          tbody:hover [style]:hover td::before {\n              transform:\n                  translate3d(calc(var(--size) / -2), calc(var(--size) / -2), 0)\n                  scale(1.25);\n          }\n\n          [scope=\"col\"]:not(:first-child) {\n            &::after {\n              mix-blend-mode: multiply;\n            }\n\n            &:hover::after {\n             opacity: .5;\n            }\n          }\n        }\n\n\n      /**\n       * @note Custom color palette for WHCM\n       * @note Inspired by Greg Whitworth's post\n       * @link http://www.gwhitworth.com/blog/2017/04/how-to-use-ms-high-contrast\n       */\n      @media screen and (-ms-high-contrast: active) {\n        &.line [style]::before {\n          background: linear-gradient(to top, ButtonHighlight, Highlight 75%);\n        }\n      }\n    }\n    }\n\n    /** Radar Charts */\n    @supports(clip-path: polygon( 0% 0%, calc(100% - ( var(--1) * 100% / var(--scale) ) ) 100%, 100% 100%)) {\n      .radar-container .fieldset {\n        display: flex !important;\n      }\n\n      &.radar {\n        --radius: 10rem;\n        --unitless-radius: calc( 1024 / 16 / 5 );\n        --size: calc( var(--radius) / var(--scale) );\n        --part: calc( 360deg / var(--items) );\n        background-image:\n          repeating-radial-gradient(\n            circle at 50%,\n            rgba(0, 0, 0, .2),\n            rgba(0, 0, 0, .2) 2px,\n            transparent 0,\n            transparent calc(var(--size) * var(--step))\n          ),\n          repeating-radial-gradient(\n            circle at 50%,\n            rgba(0, 0, 0, .1),\n            rgba(0, 0, 0, .1) 2px,\n            transparent 0,\n            transparent var(--size)\n          );\n        border: 2px solid;\n        border-radius: 50%;\n        contain: layout;\n        counter-reset: scale var(--scale);\n        height: calc( var(--radius) * 2 );\n        margin: auto;\n        overflow: visible;\n        position: relative;\n        width: calc( var(--radius) * 2 );\n\n        caption {\n          background: none;\n          bottom: $gutter * -10;\n          position: absolute;\n        }\n\n        &.step-1 {\n          /**\n           * Placing items around a circle based on:\n           * @link https://stackoverflow.com/questions/12813573/position-icons-into-circle\n           * @link http://dabblet.com/gist/3866686\n           * @author Ana Tudor\n           *\n           * @note Negative values for radius helps to start at the top left corner\n           */\n          [scope=\"col\"] {\n            --away: calc( (var(--radius) * -1) - 50% );\n            left: 50%;\n            margin: 0;\n            padding: 0 $gutter;\n            position: absolute;\n            top: 50%;\n            transform:\n              translate3d(-50%, -50%, 0)\n              rotate( calc(var(--part) * var(--index, 1)) )\n              translate( var(--away) )\n              rotate( calc(var(--part) * var(--index, 1) * -1) );\n          }\n\n          @each $number in 1, 2, 3, 4, 5, 6, 7 {\n            td:nth-of-type(#{$number}),\n            [scope=\"col\"]:nth-of-type(#{$number}) {\n              --index: #{$number};\n            }\n          }\n\n        [scope=\"col\"] {\n            &::after {\n              color: palette( accent );\n              display: block;\n              font-size: small;\n              font-weight: 400;\n            }\n\n            /**\n             * 1.\n             * @note Display CSS integers custom properties with a trick using counters\n             * @author Cassie Evans\n             * @link https://codepen.io/cassie-codes/pen/22ea69e0f681d45f2f4c2ca5e6acf4ab\n             */\n            @each $number in 1, 2, 3, 4, 5, 6, 7 {\n              &:nth-child(#{$number})::after {\n                counter-reset: value var(--#{$number});           /* 1 */\n                content: counter(value) \"\\A0/\\A0\" counter(scale); /* 1 */\n              }\n            }\n          }\n        }\n\n        &.step-2 {\n          /**\n           * This is quite sophisticated, we're mixing multiple techniques\n           *\n           * @note Setting items as parts of the circle:\n           * @link https://tympanus.net/codrops/2013/08/09/building-a-circular-navigation-with-css-transforms/\n           * @author Sara Soueidan\n           *\n           * @note Because we skew items, clip-path() needs to take skew angle into account\n           * @note To do so, we need to know skewed width (which is hypothenuse of the resulting triangle)\n           * @note We only know two angles (skew one + suqare one) and a side (initial width),\n           * @note So we need to compute the sinus of the opposite angle to get hypothenuse\n           * @note Thanks god, Stereokai made trigonometry functions in pure CSS:\n           *\n           * @note Trigonometry functions based on:\n           * @link https://gist.github.com/stereokai/7666bfe93929b14c2dced148c79e0e97\n           * @author Stereokai\n           */\n          td {\n            --skew: calc( 90deg - var(--part) );\n            border-bottom: 1px solid palette( accent, light );\n            height: 50%;\n            left: 0;\n            margin: 0;\n            position: absolute;\n            top: 0;\n            width: 50%;\n\n            @each $number in 1, 2, 3, 4, 5, 6, 7 {\n              &:nth-of-type(#{$number}) span {\n                --pos: calc( 100% - (var(--#{$number + 1}) * 100% / (var(--scale) * var(--ratio) ) ) );\n                clip-path: polygon(\n                  100% var(--pos),\n                  calc( 100% - ( var(--#{$number}) * 100% / var(--scale) ) ) 100%,\n                  100% 100%\n                );\n              }\n            }\n\n            &::after,\n            &::before {\n              display: none;\n            }\n          }\n\n          span {\n            --ratio: 1;\n            background: linear-gradient(\n              to top left,\n              palette( accent, light ) 10%,\n              palette( secondary, dark ) 75%\n            );\n            filter: drop-shadow( 0 0 $gutter palette( accent, dark ) );\n            height: 100%;\n            position: absolute;\n            width: 100%;\n          }\n        }\n\n        &.step-3 {\n            td {\n                transform:\n                  rotate( calc(var(--part) * var(--index, 1)) )\n                  skew( var(--skew) );\n                transform-origin: 100% 100%;\n            }\n        }\n\n        &.step-4 {\n          span {\n            --opposite: calc( 180 - (90 + (90 - (360 / var(--items)))) );\n            // get opposite angle in radians\n            --angle: calc( var(--opposite) * 0.01745329251 );\n            // calc() sin, dark wizardry!\n            @include sin(angle);\n            // calc() hypothenuse\n            --hypo: calc( var(--unitless-radius) / var(--sin-angle) );\n            // get the ratio: skewed / initial width\n            --ratio: calc( var(--hypo) / var(--unitless-radius) );\n            will-change: clip-path;\n            transition: clip-path .5s ease-in-out;\n        }\n      }\n\n        &.radar-multiple {\n          margin-bottom: $gutter * 12;\n\n            [scope=\"col\"]::after {\n                display: none;\n            }\n\n          tbody {\n            columns: var(--areas);\n            vertical-align: bottom;\n          }\n\n          [scope=\"row\"] {\n            bottom: $gutter * -8;\n            height: $gutter * 2;\n            left: $gutter;\n            position: absolute;\n\n            &::before {\n              background: var(--color, currentColor);\n              content: \"\";\n              display: inline-block;\n              height: $gutter;\n              margin-right: $gutter * 0.25;\n              transform: translate3d(0, .1rem, 0);\n              width: $gutter;\n            }\n          }\n\n          // Allowing more areas :)\n          @each $number in 1 {\n            tr:nth-child(#{$number + 1}) [scope=\"row\"] {\n              left: calc( #{$gutter} + (100% / var(--areas)) * #{$number});\n            }\n          }\n\n          td {\n            align-items: flex-end;\n            border-color: var(--color, currentColor);\n            display: flex;\n            justify-content: flex-end;\n            opacity: .5;\n            pointer-events: none;\n            transition: opacity .2s map-get( $timing-functions, 'move' );\n            will-change: opacity;\n            z-index: 0;\n\n            &::after {\n              color: var(--color, currentColor);\n              display: block;\n              font-size: small;\n              font-weight: 700;\n              text-indent: #{math.div($gutter, -2)};\n              transform:\n                skew( calc( var(--skew) * -1 ) )\n                rotate( calc( var(--part) * var(--index, 1) * -1 ) );\n              transform-origin: 0 0;\n              transition: inherit;\n              width: 100%;\n              will-change: inherit;\n              white-space: nowrap;\n            }\n\n            @each $number in 1, 2, 3, 4, 5, 6, 7 {\n              &:nth-of-type(#{$number})::after {\n                counter-reset: value var(--#{$number}); /* 1 */\n                content: counter(value);                /* 1 */\n                width: calc( var(--#{$number}) * 100% / var(--scale) );\n              }\n            }\n          }\n\n          span {\n            background: var(--color, currentColor);\n            pointer-events: auto;\n\n            @supports ( mask-image: url() ) {\n              mask-image: radial-gradient(circle at bottom right, rgba(0,0,0,1), rgba(0,0,0,.5));\n            }\n          }\n\n          @media (hover: hover) {\n            td {\n              opacity: .25;\n\n              &::after {\n                opacity: 0;\n              }\n            }\n\n            tr:hover td {\n              opacity: 1;\n              z-index: 1;\n\n              &::after {\n                opacity: inherit;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** Pie charts */\n        @supports (clip-path: polygon( 50% calc( 50% + ( var(--gt-25, 0) ) ) )) {\n          .pie-container .fieldset {\n            display: flex !important;\n          }\n\n          &.pie {\n              &.step-1 {\n                margin: 0 auto;\n                padding-top: calc(#{$width * 0.5} - #{$gutter * 2});\n                position: relative;\n\n                tbody {\n                  --side: calc( #{$width} / 2 );\n                  --hypo: calc( 1024 / 16 / 2 );\n                  display: table-row;\n                }\n\n                tr {\n                  display: table-cell;\n                  transition: opacity .3s map-get( $timing-functions, 'move' );\n                  will-change: opacity;\n                }\n\n                @each $name, $pattern in $patterns {\n                  $i: index($patterns, ($name $pattern));\n\n                  tr:nth-child(#{$i}n + #{$i}) {\n                    --background: var(--#{$name}); /* 1 */\n                  }\n                }\n\n                [scope=\"row\"] {\n                  padding-right: $gutter * 0.5;\n\n                  &::before {\n                    background: var(--color, currentColor) var(--background);\n                    content: \"\";\n                    display: inline-block;\n                    height: $gutter;\n                    transform: translate3d(-.2rem, .1rem, 0);\n                    width: $gutter;\n                  }\n                }\n            }\n\n            &.step-2 {\n                td {\n                  --position: calc(var(--start, 0) * .01turn);\n                }\n\n                td::after,\n                td::before {\n                  left: 50%;\n                  position: absolute;\n                  top: 40%;\n                  transform-origin: center center;\n                }\n\n                /**\n                 * Using clip-path + calc() + transform + CSS vars\n                 * Using mask-image to make a circle\n                 *\n                 * @note Based on Ana Tudor's work\n                 * @link https://css-tricks.com/1-html-element-5-css-properties-magic/\n                 * @author Ana Tudor\n                 *\n                 * @note Using a Roma Komarov's idea about boolean custom properties\n                 * @link https://www.kizu.ru/conditions-for-css-variables/\n                 *\n                 * @note Mask support:\n                 * @link https://caniuse.com/#search=mask\n                 */\n                td::before {\n                  --zoom: .75;\n                  --part: calc( var(--value) * 3.6 );\n                  --main-angle: calc( var(--part) - ( 90 * ( var(--gt-25, 0) + var(--gt-50, 0) + var(--gt-75, 0) ) ) );\n                  --β: calc( var(--main-angle) * 0.01745329251 );\n                  --α: calc( ( 90 - var(--main-angle) ) * 0.01745329251 );\n                  @include sin(β);\n                  @include sin(α);\n                  --B: calc( var(--hypo) * var(--sin-β) );\n                  --A: calc( var(--hypo) * var(--sin-α) );\n                  --pos-B: calc( ( var(--B) * 100 / var(--hypo) ) / 2 );\n                  --pos-A: calc( ( var(--A) * 100 / var(--hypo) ) / 2 );\n                  background: var(--color, currentColor) var(--background);\n                  clip-path: polygon(\n                    50% 50%,\n                    50% 0%,\n                    100% 0%,\n                    calc( 50% + ( var(--pos-B) * 1% * var(--lt-25, 1) ) + ( var(--gt-25, 0) * 50% ) ) calc( 50% - ( var(--pos-A) * 1% * var(--lt-25, 1) ) ),\n                    calc( 50% + ( var(--gt-25, 0) * 50% ) )                                           calc( 50% + ( var(--gt-25, 0) * 50% ) ),\n                    calc( 50% + ( var(--pos-A) * 1% * var(--lt-50, 1) ) + ( var(--gt-50, 0) * 50% ) ) calc( 50% + ( var(--pos-B) * 1% * var(--lt-50, 1) ) + ( var(--gt-50, 0) * 50% ) ),\n                    calc( 50% - ( var(--gt-50, 0) * 50% ) )                                           calc( 50% + ( var(--gt-50, 0) * 50% ) ),\n                    calc( 50% - ( var(--pos-B) * 1% * var(--lt-75, 1) ) - ( var(--gt-75, 0) * 50% ) ) calc( 50% + ( var(--pos-A) * 1% * var(--lt-75, 1) ) ),\n                    calc( 50% - ( var(--gt-75, 0) * 50% ) )                                           calc( 50% - ( var(--gt-75, 0) * 50% ) ),\n                    calc( 50% - ( var(--pos-A) * 1% * var(--gt-75, 0) ) )                             calc( 50% - ( var(--pos-B) * 1% * var(--gt-75, 0) ) ),\n                    50% 50%\n                  );\n                  content: '';\n                  height: var(--side);\n                  mask-image: radial-gradient(\n                    circle at center,\n                    palette( default, contrast) 0%,\n                    palette( default, contrast) calc(var(--side) / 2),\n                    transparent calc(var(--side) / 2)\n                  );\n                  transform:\n                    translate3d(-50%, -50%, 0)\n                    rotate( var(--position) )\n                    scale( var(--zoom) );\n                  transition: transform .2s map-get( $timing-functions, 'move' );\n                  width: var(--side);\n                  will-change: transform;\n                }\n\n                tr:hover td::before {\n                  --zoom: .8;\n                }\n\n                td::after {\n                  --arrow: calc(100% - #{$gutter * 0.25});\n                  --axis: calc( var(--position) - .25turn + var(--value) * .005turn );\n                  --away: calc( var(--side) / 2 - #{$gutter} );\n                  background-color: palette( dominant );\n                  color: palette( dominant, contrast );\n                  content: var(--term) \"\\A0: \" counter(value) \"\\A0%\";\n                  counter-reset: value var(--value);\n                  opacity: 0;\n                  padding: $gutter * 0.5;\n                  pointer-events: none;\n                  transform-origin: 50% calc(100% + 10px);\n                  transform:\n                    translate3d(-50%, -50%, 0)\n                    rotate( var(--axis) )\n                    translate( var(--away) )\n                    rotate( calc( var(--axis) * -1 ) )\n                    perspective(1000px)\n                    rotate3d(1, 0, 0, 45deg);\n                  transition:\n                    opacity .2s map-get( $timing-functions, 'enter' ),\n                    transform .2s map-get( $timing-functions, 'enter' );\n                  will-change: opacity, transform;\n                }\n\n                tbody:hover tr {\n                  opacity: .5;\n\n                  &:hover {\n                    opacity: 1;\n                  }\n\n                  &:hover td::after {\n                    opacity: 1;\n                    transform:\n                      translate3d(-50%, -50%, 0)\n                      rotate( var(--axis) )\n                      translate( var(--away) )\n                      rotate( calc( var(--axis) * -1 ) )\n                      perspective(1000px)\n                      rotate3d(1, 0, 0, 0deg);\n                    transition:\n                      opacity .2s map-get( $timing-functions, 'exit' ),\n                      transform .2s map-get( $timing-functions, 'exit' );\n                  }\n                }\n              }\n          }\n\n          &.pie.step-2.polar {\n            td::before {\n              --zoom: 50;\n              transform:\n                translate3d(-50%, -50%, 0)\n                rotate( var(--position) )\n                scale( calc( ( var(--zoom) + ( var(--value) / ( 100 / var(--zoom) ) ) ) / 100 ) );\n            }\n\n            tr:hover td::before {\n              --zoom: 50;\n            }\n          }\n\n          &.donut {\n             mask-image: radial-gradient(\n               circle at 50% calc(50% - #{$gutter * 2}),\n               transparent 0%,\n               transparent var(--offset),\n               palette( default, contrast) calc(var(--offset) + 1px),\n               palette( default, contrast) 100%\n             );\n\n             td::after {\n               --away: calc( var(--side) / 2 - #{$gutter * 2.5} );\n             }\n           }\n\n          /**\n           * @note Custom color palette for WHCM\n           * @note Inspired by Greg Whitworth's post\n           * @link http://www.gwhitworth.com/blog/2017/04/how-to-use-ms-high-contrast\n           */\n          @media screen and (-ms-high-contrast: active) {\n            &.pie {\n              tbody tr *::before {\n                background-color: Window;\n              }\n\n              tbody tr:nth-of-type(odd) *::before {\n                background-color: WindowText;\n              }\n            }\n          }\n      }\n    }\n}\n","// ----------------------------- */\n// == Functions\n// ----------------------------- */\n\n// em conversion\n// @note Found in Marie Guillaumet's Gists\n// @author Marie Guillaumet\n// @see https://twitter.com/kReEsTaL\n// @see http://marieguillaumet.com/\n// @see https://gist.github.com/ijy/1441967\n@use \"sass:math\";\n\n@function em( $f, $base: 16 ) {\n  $everything-okay: true;\n\n  @if type-of( $f ) != number {\n    @warn \"Biip ! `{$s}` is not a valid number.\";\n    $everything-okay: false;\n  }\n\n  @if $everything-okay == true {\n    @if $f == 0 { @return 0 }\n    @return math.div($f, $base) * 1em;\n  }\n}\n\n// rem conversion\n@function rem( $f, $base: 16 ) {\n  $everything-okay: true;\n\n  @if type-of( $f ) != number {\n    @warn \"Biip ! `{$s}` is not a valid number.\";\n    $everything-okay: false;\n  }\n\n  @if $everything-okay == true {\n    @if $f == 0 { @return 0 }\n    @return math.div($f, $base) * 1rem;\n  }\n}\n\n\n// Color palette\n// @note Allow to pick a color in defined color palette\n// @author Tom Davies\n// @see http://erskinedesign.com/blog/friendlier-colour-names-sass-maps/\n@function palette( $color, $tone: \"base\" ) {\n  @if ( map-has-key( $colors, $color ) ) {\n    @if ( map-has-key( map-get( $colors, $color ), $tone ) ) {\n      @return map-get( map-get( $colors, $color ), $tone );\n    } @else {\n      @error \"Biip ! `#{$tone}` is not a valid `#{$color}`'s variants.\";\n    }\n  } @else {\n    @error \"Biip ! `#{$color}` is not part of our palette…\";\n  }\n}\n\n\n// Replace `$search` with `$replace` in `$string`\n// @author Hugo Giraudel\n// @param {String} $string - Initial string\n// @param {String} $search - Substring to replace\n// @param {String} $replace ('') - New value\n// @return {String} - Updated string\n// @see https://www.sassmeister.com/gist/1b4f2da5527830088e4d\n@function str-replace($string, $search, $replace: '') {\n  $index: str-index($string, $search);\n  \n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n  \n  @return $string;\n}\n\n\n// Convert value to string\n// @author Hugo Giraudel\n// @see https://hugogiraudel.com/2014/01/27/casting-types-in-sass/\n@function to-string($value) {\n  @return inspect($value);\n}\n\n@mixin sin($angle) {\n  --sin-term-#{$angle}-1: var(--#{$angle});\n  --sin-term-#{$angle}-2: calc((var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle})) / 6);\n  --sin-term-#{$angle}-3: calc((var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle})) / 120);\n  --sin-term-#{$angle}-4: calc((var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle})) / 5040);\n  --sin-term-#{$angle}-5: calc((var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle}) * var(--#{$angle})) / 362880);\n  --sin-#{$angle}: calc(var(--sin-term-#{$angle}-1) - var(--sin-term-#{$angle}-2) + var(--sin-term-#{$angle}-3) - var(--sin-term-#{$angle}-4) + var(--sin-term-#{$angle}-5));\n}\n\n","@charset \"UTF-8\";\n/* ----------------------------- */\n/* Table of contents */\n/* ----------------------------- */\n/*\n  == Paths\n  == Colors\n  == Timing functions\n  == Spacings\n  == Patterns\n  == Formage\n*/\n\n/* ==================== */\n/* == Paths\n/* ==================== */\n@use \"sass:math\";\n\n$path: \"../\" !default;\n\n/* ==================== */\n/* == Colors\n/* ==================== */\n$colors: (\n  dominant: (\n    base: #444,\n    light: mediumblue,\n    dark: black,\n    contrast: white\n  ),\n  secondary: (\n    base: mediumblue,\n    light: deepskyblue,\n    dark: DarkBlue,\n    contrast: white\n  ),\n  accent: (\n    base: rebeccapurple,\n    light: blueviolet,\n    dark: indigo,\n    contrast: white\n  ),\n  alert: (\n    base: crimson,\n    light: firebrick,\n    dark: #911,\n    contrast: white\n  ),\n  success: (\n    base: springgreen,\n    light: palegreen,\n    dark: #01ac49,\n    contrast: #444\n  ),\n  muted: (\n    base: gray,\n    light: darkgray,\n    dark: #333,\n    contrast: black\n  ),\n  default: (\n    base: dimgray,\n    light: lightgray,\n    dark: darkgrey,\n    secondary: whitesmoke,\n    contrast: white\n  ),\n  charts: (\n    purple: #734bf9,\n    pink: #e11a81,\n    blue: #0172f0,\n    yellow: #fdc02f,\n    green: #39ca74,\n    red: #ff2d40,\n    gray: #585462\n  )\n);\n\n$blank: str-replace(to-string(palette( accent )), \"#\", \"%23\");\n$blank-focus: str-replace(to-string(palette( accent, dark )), \"#\", \"%23\");\n\n/* ==================== */\n/* == Timing functions\n *\n * @note Simple cubic-bezier curves for timing functions\n * @author David K. Piano\n * @link https://twitter.com/DavidKPiano/status/965704092545900544\n/* ==================== */\n$timing-functions: (\n  enter: cubic-bezier(0, .5, .5, 1),\n  exit: cubic-bezier(.5, 0, 1, .5),\n  move: cubic-bezier(.5, 0, .5, 1)\n);\n\n/* ==================== */\n/* == Spacings\n/* ==================== */\n$full-width: false !default;\n$base: math.div(1140, 16) !default;\n$width: em( 1024 ) !default;\n$gutter: rem( 16 ) !default;\n$content-width: em( 600 ) !default;\n\n/* ==================== */\n/* == Patterns\n *\n * @note SVG inline patterns coming from:\n * @link http://www.heropatterns.com/\n/* ==================== */\n$patterns: (\n  \"checkers\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cg fill='%23ffffff99'%3E%3Cpath fill-rule='evenodd' d='M0 0h4v4H0V0zm4 4h4v4H4V4z'/%3E%3C/g%3E%3C/svg%3E\",\n  \"hexagons\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='14' height='24' viewBox='0 0 28 49'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff99' fill-rule='nonzero'%3E%3Cpath d='M13.99 9.25l13 7.5v15l-13 7.5L1 31.75v-15l12.99-7.5zM3 17.9v12.7l10.99 6.34 11-6.35V17.9l-11-6.34L3 17.9zM0 15l12.98-7.5V0h-2v6.35L0 12.69v2.3zm0 18.5L12.98 41v8h-2v-6.85L0 35.81v-2.3zM15 0v7.5L27.99 15H28v-2.31h-.01L17 6.35V0h-2zm0 49v-8l12.99-7.5H28v2.31h-.01L17 42.15V49h-2z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\",\n  \"triangles\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='16' viewBox='0 0 36 72'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff99'%3E%3Cpath d='M2 6h12L8 18 2 6zm18 36h12l-6 12-6-12z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\",\n  \"zig\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='12' viewBox='0 0 20 12'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23ffffff99'%3E%3Cpath d='M9.8 12L0 2.2V.8l10 10 10-10v1.4L10.2 12h-.4zm-4 0L0 6.2V4.8L7.2 12H5.8zm8.4 0L20 6.2V4.8L12.8 12h1.4zM9.8 0l.2.2.2-.2h-.4zm-4 0L10 4.2 14.2 0h-1.4L10 2.8 7.2 0H5.8z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\",\n  \"stripes\": \"data:image/svg+xml,%3Csvg width='6' height='6' viewBox='0 0 6 6' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ffffff99' fill-rule='evenodd'%3E%3Cpath d='M5 0h1L0 6V5zM6 5v1H5z'/%3E%3C/g%3E%3C/svg%3E\",\n  \"dots\": \"data:image/svg+xml,%3Csvg width='10' height='10' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='%23ffffff99' fill-rule='evenodd'%3E%3Ccircle cx='3' cy='3' r='3'/%3E%3Ccircle cx='13' cy='13' r='3'/%3E%3C/g%3E%3C/svg%3E\"\n);\n\n\n/* ==================== */\n/* == Inline icons\n/* ==================== */\n$icons: (\n  \"external\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Cpath d='M91.875 62H85v23H15V15h23V0H0v100h100V62z'/%3E%3Cpath d='M54 0v.627l17.787 17.85L52.701 38H38v24h24V49.799l20.773-20.337L99.374 46H100V0z'/%3E%3C/svg%3E\",\n  \"unsafe\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 47 59.5'%3E%3Cpath d='m 44,26.5 h -3.5 v -10 C 40.5,7.402 33.098,0 24,0 H 23 C 14.801,0 7.943,5.874 6.694,13.966 c -0.295,1.91 1.015,3.698 2.925,3.993 1.916,0.297 3.699,-1.016 3.993,-2.925 C 14.319,10.454 18.355,7 23,7 h 1 c 5.238,0 9.5,4.262 9.5,9.5 v 10 H 3 c -1.657,0 -3,1.343 -3,3 v 27 c 0,1.657 1.343,3 3,3 h 41 c 1.657,0 3,-1.343 3,-3 v -27 c 0,-1.657 -1.343,-3 -3,-3 z'/%3E%3C/svg%3E\",\n  \"anchor\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 85 85.2'%3E%3Cpath d='M56.7 51.7l9.1 9c-2.3 5.5-8.1 9.7-17.3 11.2v-45c6.1-2.3 8-7.1 8-12.7C56.5 6.4 50.2 0 42.4 0s-14 6.3-14 14.2c0 5.6 1.9 10.4 8 12.7v45c-9.1-1.5-15-5.7-17.3-11.2l9.2-9H0v27.8l9.8-9.8c6.2 9.2 18.5 15.5 32.7 15.5 14.2 0 26.5-6.3 32.7-15.5l9.8 9.8V51.7zM42.5 19c-2.6 0-4.7-2.1-4.7-4.7s2.1-4.7 4.7-4.7 4.7 2.1 4.7 4.7-2.1 4.7-4.7 4.7z'/%3E%3C/svg%3E\",\n  \"select\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 59 47.5'%3E%3Cpath d='M29.414,37.657 L0.344,8.586 L8.828,0.102 L29.414,20.686 L50,0.1 L58.484,8.585 L29.414,37.657'/%3E%3C/svg%3E\",\n  \"required\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 125'%3E%3Cpath fill='crimson' d='M53.5355339 41.4644661L70 25l5 5-16.4644661 16.4644661h23.2842713v7.0710678H58.5355339L75 70l-5 5-16.4644661-16.4644661v23.2842713h-7.0710678V58.5355339L30 75l-5-5 16.4644661-16.4644661H18.1801948v-7.0710678h23.2842713L25 30l5-5 16.4644661 16.4644661V18.1801948h7.0710678z'/%3E%3C/svg%3E\",\n  \"valid\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6.3 6.1'%3E%3Cpath fill='%2301ac49' d='M0 2.6235l.898-.898 1.3851 1.3851L5.3936 0l.898.8981-4.0085 4.0085L0 2.6235z'/%3E%3C/svg%3E\",\n  \"invalid\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 125'%3E%3Cpath fill='crimson' d='M74.749 11.109L50 35.858 25.251 11.109 11.109 25.251 35.858 50 11.109 74.749l14.142 14.142L50 64.142l24.749 24.749 14.142-14.142L64.142 50l24.749-24.749z'/%3E%3C/svg%3E\",\n  \"mail\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 84 56'%3E%3Cpath d='M0 0v3.7188l42 28.62504L84.000004 3.7188V0zm0 10.9688v45.03124h84.000004V10.9688L43.6875 38.46884a3.0003 3.0003 0 0 1-3.375 0z'/%3E%3C/svg%3E\",\n  \"tel\": \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 46 88'%3E%3Cpath d='M6 0C2.676 0 0 2.676 0 6v76.00005c0 3.324 2.676 6 6 6h34c3.324 0 6-2.676 6-6V6c0-3.324-2.676-6-6-6zM4 10h38v64.00005H4z'/%3E%3C/svg%3E\"\n);\n\n\n/* ==================== */\n/* == Formage\n/* ==================== */\n$form-fields: ( 'input[type=\"text\"], input[type=\"number\"], input[type=\"search\"], input[type=\"password\"], input[type=\"email\"], input[type=\"url\"], input[type=\"tel\"], input[type=\"date\"], input[type=\"time\"], input[type=\"datetime-local\"], input[type=\"month\"], input[type=\"week\"], input[type=\"color\"], input[type=\"file\"], textarea' );\n$form-radio-checkbox: ( 'input[type=\"checkbox\"], input[type=\"radio\"]' );\n$form-buttons: ( '.button, button, input[type=\"submit\"], input[type=\"reset\"], input[type=\"button\"]' );\n"]}